# https://ronsavage.github.io/SQL/sql-2003-2.bnf.html
grammar SQL
    rule select_clause  # query_specification
        head:s 
        (SELECT set_quantifier? select_list table_expression
        )
        <SQL::Select>
    end

    rule select_list 
          asterisk
        / select_sublist (comma select_sublist )*
    end

    rule select_sublist
        derived_column 
        # / qualified_asterisk
    end

    rule derived_column
        value_expression as_clause? 
        # <SQL::ColumnName>
    end

    rule as_clause
        AS? column_name 
    end

    rule column_name
        identifier
    end
    
    rule table_expression
        from_clause
    # [ <where clause> ]
    # [ <group by clause> ]
    # [ <having clause> ]
    # [ <window clause> ] 
    end

    rule from_clause
        FROM table_reference_list
    end

    rule table_reference_list
        table_reference ( comma table_reference)*
    end

    rule table_reference # <table primary or joined table> [ <sample clause> ] 
        table_primary # | <joined table> 
    end

    rule table_primary
        table_or_query_name # [ [ AS ] <correlation name> [ <left paren> <derived column list> <right paren> ] ]
    # |     <derived table> [ AS ] <correlation name> [ <left paren> <derived column list> <right paren> ]
    # |     <lateral derived table> [ AS ] <correlation name> [ <left paren> <derived column list> <right paren> ]
    # |     <collection derived table> [ AS ] <correlation name> [ <left paren> <derived column list> <right paren> ]
    # |     <table function derived table> [ AS ] <correlation name> [ <left paren> <derived column list> <right paren> ]
    # |     <only spec> [ [ AS ] <correlation name> [ <left paren> <derived column list> <right paren> ] ]
    # |     <left paren> <joined table> <right paren>
    end

    rule table_or_query_name
        table_name # | <query name>
    end

    rule table_name # <=> <local or schema qualified name> 
        (local_or_schema_qualifier period)? identifier
    end

    rule local_or_schema_qualifier
        identifier  # <schema name> | MODULE 
    end

    ###
    # expression
    rule value_expression
            common_value_expression
        #/   boolean_value_expression
        #/   row_value_expression
    end

    rule common_value_expression
        numeric_value_expression
    # |     <string value expression>
    # |     <datetime value expression>
    # |     <interval value expression>
    # |     <user-defined type value expression>
    # |     <reference value expression>
    # |     <collection value expression>    
    end

    rule numeric_value_expression
        term
    # |     <numeric value expression> <plus sign> <term>
    # |     <numeric value expression> <minus sign> <term>
    end

    rule term
        factor
    # |     <term> <asterisk> <factor>
    # |     <term> <solidus> <factor>
    end

    rule factor
        sign? numeric_primary
    end

    rule numeric_primary
        value_expression_primary
    # |     <numeric value function>  
    end

    rule value_expression_primary
        left_paren value_expression right_paren
    /   nonparenthesized_value_expression_primary
    end

    rule nonparenthesized_value_expression_primary
    # <unsigned value specification>
         column_reference
    # |     <set function specification>
    # |     <window function>
    # |     <scalar subquery>
    # |     <case expression>
    # |     <cast specification>
    # |     <field reference>
    # |     <subtype treatment>
    # |     <method invocation>
    # |     <static method invocation>
    # |     <new specification>
    # |     <attribute or method reference>
    # |     <reference resolution>
    # |     <collection value constructor>
    # |     <array element reference>
    # |     <multiset element reference>
    # |     <routine invocation>
    # |     <next value expression>        
    end

    rule column_reference
        identifier_chain # <=> basic_identifier_chain
    # |     MODULE <period> <qualified identifier> <period> <column name>        
    end

    ## Identifiers
    rule identifier_chain
        identifier (period identifier)?
    end

    rule identifier # <=> <actual identifier> 
                    # <=> <qualified identifier> 
        regular_identifier # | <delimited identifier>
    end

    rule regular_identifier  # <=> <identifier body>
        symbolchar+ !symbolchar s # <Identifier>
    end

    # keywords
    rule sign
          '+' s
        / '-' s
    end

    rule left_paren
        '(' s
    end

    rule right_paren
        ')' s
    end

    rule set_quantifier
          'distinct'i kw
        / 'all'i kw
    end

    rule asterisk
        '*' s
    end

    rule comma
        ',' s
    end

    rule period
        '.' s
    end

    rule SELECT
        'select'i kw
    end

    rule AS
        'AS'i kw
    end

    rule FROM
        'from'i kw
    end

    # keyword end
    rule kw
        !symbolchar s
    end

    rule symbolchar
        [[:alnum:]_]
    end

    # space & comments
    rule s # Optional space
        S?                 
    end

    rule S  # Mandatory space
        [ \t]+
    end

    rule c_comment
        '/*' ( !'*/' (. / "\n"))* '*/'
    end

    rule eol_comment
        '--' ( !"\n" .)* "\n"
    end
end
